name: "Prepare infra meeting notes release"

# https://docs.github.com/en/enterprise-cloud@latest/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
on:
  workflow_dispatch:
    inputs:
      milestone_id:
        description: 'Milestone id to prepare for release'
        required: true
        default: '1' 
        type: string
      milestone_name:
        description: 'Milestone name'
        required: true
        default: 'current' 
        type: string


jobs:

  # https://localheinz.com/blog/2022/01/24/creating-releases-with-github-actions/
  release:
    name: "Prepare infra meeting notes release"
    runs-on: "ubuntu-latest"
    steps:
    
      - name: Run script file
        run: |
          chmod +x ./.github/workflows/milestone2md.sh
          echo "RELEASE_BODY=$(./.github/workflows/milestone2md.sh)" >> $GITHUB_ENV
          echo "TEST"
        shell: bash


      - name: "Determine tag"
        run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.INFRA_GITHUB_APP_ID }}
          private_key: ${{ secrets.INFRA_GITHUB_APP_PRIVATE_KEY }}

      - name: "Create release"
        uses: "actions/github-script@v6"
        with:
          # github-token: "${{ steps.generate_token.outputs.token }}"
          script: |
            console.log(JSON.stringify(context.issue))
            try {
              await github.rest.repos.createRelease({
                draft: true,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
            } catch (error) {
              core.setFailed(error.message);
            }
